{"version":3,"sources":["FirebaseFunctions/firebaseUtils.js","Components/Main/Main.js","Components/Post/Post.js","Components/Nav/Nav.js","Components/MyPosts/MyPosts.js","App.js","reportWebVitals.js","Reducers/RootReducer.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","currentUser","GoogleAuthProvider","setCustomParameters","prompt","createUserDocument","userAuth","a","reference","doc","uid","get","exists","displayName","email","createdAt","Date","userPosts","author","set","e","console","log","message","createPostDocument","postId","comments","title","image","description","url","connect","state","allUserData","userData","useState","domainName","setDomainName","inputData","setInputData","setUserData","previewData","setPreviewData","setPinnedData","partOfUrl","setPartOfUrl","redirectLink","setRedirectLink","useEffect","window","location","hostname","handleAddingPin","update","FieldValue","arrayUnion","className","TextField","value","onChange","target","id","variant","InputProps","Button","color","onClick","seconds","getTime","String","substr","length","fetch","then","data","json","Object","keys","src","alt","slice","href","to","pathname","Post","props","setRouterPostId","postData","setPostData","currentComment","setCurrentComment","setComments","setRetrievedComments","match","params","loadPostData","collection","where","forEach","item","handleAddingComments","handleRetrieveComments","label","map","comment","index","dispatch","signingIn","type","payload","displayImage","setDisplayImage","display","setDisplay","onAuthStateChanged","user","providerData","photoURL","displaySignOutButton","signOut","signInWithPopup","allPostIds","setAllPostIds","allPostDetails","setAllPostDetails","retrievePostsIds","push","prevValue","App","path","component","Main","exact","MyPosts","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initState","RootReducer","action","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ea37d533.chunk.js","sourcesContent":["import firebase from \"firebase/app\"\r\n\r\nimport \"firebase/auth\"\r\nimport \"firebase/firestore\"\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCjlrjFWYj5KLrQcg5M1u16CLBDhpINEOI\",\r\n    authDomain: \"alinea-invest-login.firebaseapp.com\",\r\n    projectId: \"alinea-invest-login\",\r\n    storageBucket: \"alinea-invest-login.appspot.com\",\r\n    messagingSenderId: \"954495321638\",\r\n    appId: \"1:954495321638:web:9380977d95abd69d2108e7\",\r\n    measurementId: \"G-FXMVQT1RSP\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\nexport const firestore = firebase.firestore()\r\nexport const auth = firebase.auth()\r\nexport const user = firebase.auth().currentUser;\r\n\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider()\r\n\r\nprovider.setCustomParameters({ prompt : 'select_account' })\r\n\r\nexport const googleSignin = () => auth.signInWithPopup(provider)\r\n\r\n//Creating user document\r\nexport const createUserDocument = async (userAuth) => {\r\n    if(userAuth){\r\n        let reference = firestore.doc(`userData/${userAuth.uid}`)\r\n        let snapshot = await reference.get()\r\n        if(!snapshot.exists){\r\n            let { displayName, uid, email } = userAuth\r\n            let createdAt = new Date()\r\n            // let postTitle = \"\"\r\n            // let postDesc = \"\"\r\n            // let postLink = \"\"\r\n            // let postImage = \"\"\r\n            let userPosts = []\r\n            let author = displayName\r\n            try {\r\n                reference.set({\r\n                    displayName,\r\n                    uid,\r\n                    email,\r\n                    createdAt,\r\n                    userPosts,\r\n                    author\r\n                })\r\n            } catch (e) {\r\n                console.log(`${e.message} is the error`)\r\n            }\r\n        } else {\r\n            return userAuth;\r\n        }\r\n    }\r\n  }\r\n\r\n  export const createPostDocument = async postId => {\r\n      let reference = firestore.doc(`ngagePosts/${postId}`)\r\n      let snapshot = await reference.get()\r\n      if(!snapshot.exists) {\r\n        let title = \"\"\r\n        let image = \"\"\r\n        let url = \"\"\r\n        let description = \"\"\r\n        let comments = []\r\n        try {\r\n            reference.set({\r\n            title,\r\n            image,\r\n            description,\r\n            url,\r\n            comments\r\n            })\r\n        } catch (e) {\r\n            console.log(`${e.message} is the Error`)\r\n        }\r\n      } else {\r\n          return\r\n      }\r\n  }\r\n\r\n","import React, { useState, useEffect } from \"react\"\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Link } from \"react-router-dom\"\r\nimport { firestore, createPostDocument } from \"../../FirebaseFunctions/firebaseUtils\"\r\nimport firebase from \"firebase/app\";\r\n// import { FcGoogle } from \"react-icons/fc\";\r\n// import { BsArrowRight } from \"react-icons/bs\";\r\n\r\nimport { connect } from \"react-redux\"\r\n\r\nimport \"./Main.css\"\r\n\r\n\r\nconst Main = ({ allUserData }) => {\r\n    const apiKey = \"aea11fb488e7be30acbfb6e5c48beade\"\r\n\r\n    let date;\r\n\r\n    const [domainName, setDomainName] = useState(\"\")\r\n    const [inputData, setInputData] = useState(\"\")\r\n    const [userData, setUserData] = useState(\"\")\r\n    const [previewData, setPreviewData] = useState({})\r\n    const [pinnedData, setPinnedData] = useState({})\r\n    // const [commentsToThePost, setCommentsToThePost] = useState([])\r\n    const [partOfUrl, setPartOfUrl] = useState(\"\")\r\n    const [redirectLink, setRedirectLink] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        // auth.onAuthStateChanged(user => {\r\n        //     setUserData(user)\r\n        //     createUserDocument(user)\r\n        //     if(user) {\r\n        //         setDisplayImage(user.providerData[0].photoUrl)\r\n        //     }\r\n        //     // console.log(28, user.displayName)\r\n        // })\r\n        setUserData(allUserData)\r\n        \r\n        // console.log(41, allUserData.providerData[0])\r\n\r\n        setDomainName(window.location.hostname)\r\n    },[allUserData])\r\n\r\n    const handleSaveInputData = e => {\r\n        setInputData(e.target.value)\r\n    }\r\n\r\n    const generateLinkPreview = () => {\r\n        date = new Date()\r\n        let seconds = date.getTime()\r\n        console.log(43, seconds)\r\n        setPartOfUrl(String(seconds).substr(6))\r\n        \r\n        if(inputData.length>0) {\r\n            fetch(`http://api.linkpreview.net/?key=${apiKey}&q=${inputData}`)\r\n            .then(data => data.json())\r\n            .then(json => setPreviewData(json))\r\n        }\r\n        createPostDocument(String(seconds).substr(6))\r\n        setInputData(\"\")\r\n        setRedirectLink(\"\")\r\n    }\r\n\r\n    const handleAddingPin = async () => {\r\n        setPinnedData(previewData)\r\n        await firestore.doc(`/userData/${userData.uid}`).update({\r\n            userPosts : firebase.firestore.FieldValue.arrayUnion({postId: partOfUrl})\r\n        })\r\n        console.log(\"Done!\")\r\n        \r\n\r\n        await firestore.doc(`/ngagePosts/${partOfUrl}`).update({\r\n            postId: partOfUrl,\r\n            title: previewData.title,\r\n            description: previewData.description,\r\n            url: previewData.url,\r\n            image: previewData.image,\r\n            // comments: []\r\n        })\r\n        setRedirectLink(`${domainName}:3000/posts/${partOfUrl}`)\r\n    }\r\n\r\n    // const handleGoogleSignin = () => {\r\n    //     googleSignin()\r\n    // }\r\n\r\n    // const signOut = () => {\r\n    //     auth.signOut()\r\n    // }\r\n\r\n    return (\r\n        <div className=\"mainBlock\">\r\n            <div className=\"main-info\">\r\n                <p>Insert any link below</p>\r\n            </div>\r\n            <div className=\"textAndButtons\">\r\n                <TextField value={inputData} onChange={handleSaveInputData} className=\"inputField\" id=\"outlined-basic\" variant=\"outlined\" InputProps={{className: \"textColor\"}}/>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={generateLinkPreview}>GO</Button>\r\n            </div>\r\n            { Object.keys(previewData).length>0 && \r\n                <>\r\n                    <div className=\"preview\">\r\n                        <div className=\"postMainContent\">\r\n                        <img src={previewData.image} alt={previewData.title} />\r\n                        <div className=\"postMainContent-text\">\r\n                            <h1>{previewData.title}</h1>\r\n                            {previewData.description && <p>{previewData.description.slice(0,200)}...</p>}\r\n                            <a href={previewData.url}>{previewData.url}</a>\r\n                        </div>\r\n                </div> \r\n                    </div> \r\n                    <div className=\"preview-Pin\">\r\n                        { (Object.keys(previewData).length>0 && userData) &&  \r\n                            <>\r\n                                <Button variant=\"contained\" color=\"default\" className=\"pin-button\" onClick={handleAddingPin}>Create a POST for discussion</Button>\r\n                                { redirectLink && \r\n                                    <div className=\"pinRedirectLink\">\r\n                                        {/* <p className=\"pinRedirectLink-content\">Pin created at <BsArrowRight /> </p> */}\r\n                                        <Link to={{pathname: \"/posts/\"+partOfUrl, state:{url : previewData.url, uid : userData.uid }}} className=\"pinRedirectLink-link\" target=\"_blank\">\r\n                                            Check out the post\r\n                                        </Link> \r\n                                    </div>\r\n                                }\r\n                            </> \r\n                        }\r\n                    </div>\r\n                </>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        allUserData : state.userData\r\n    }   \r\n}\r\n\r\nexport default connect(mapStateToProps)(Main);","import React, { useState, useEffect } from \"react\"\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { firestore } from \"../../FirebaseFunctions/firebaseUtils\";\r\nimport firebase from \"firebase/app\";\r\n\r\nimport \"./Post.css\"\r\n\r\n\r\nconst Post = (props) => {\r\n\r\n    const [routerPostId, setRouterPostId] = useState(\"\")\r\n    const [postData, setPostData] = useState({})\r\n    const [currentComment, setCurrentComment] = useState(\"\")\r\n    const [comments, setComments] = useState([])\r\n    const [retrievedComments, setRetrievedComments] = useState([])\r\n\r\n    useEffect(() => {\r\n        // console.log(props)\r\n        // console.log(10, props.match.params.postId)\r\n        // console.log(14, props.location.state)\r\n        setRouterPostId(props.match.params.postId)\r\n    },[props])\r\n\r\n    let loadPostData = async () => {\r\n        let reference = await firestore.collection('ngagePosts').where('postId',\"==\",props.match.params.postId).get()\r\n        reference.forEach(item => setPostData(item.data()))\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadPostData()\r\n    },[props])\r\n\r\n    const handleCommentsChange = e => {\r\n        let value = e.target.value\r\n        setCurrentComment(value)\r\n    }\r\n\r\n    const handleAddingComments = async () => {\r\n        setComments([...comments, currentComment])\r\n        setCurrentComment(\"\")\r\n        // let reference = await firestore.collection('ngagePosts').where('postId',\"==\", props.match.params.postId).get()\r\n        await firestore.doc(`/ngagePosts/${props.match.params.postId}`).update({\r\n            comments : firebase.firestore.FieldValue.arrayUnion(currentComment)\r\n        })\r\n    }\r\n\r\n    const handleRetrieveComments = async () => {\r\n        let reference = await firestore.collection('ngagePosts').where('postId',\"==\",props.match.params.postId).get()\r\n        reference.forEach(item => {\r\n            // if(item.data()){\r\n            //     console.log(50, item.data())\r\n            // } else {\r\n            //     console.log(\"no comments\")\r\n            // }\r\n            setRetrievedComments([...item.data().comments])\r\n            setComments([...item.data().comments])\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        handleRetrieveComments()\r\n    },[comments])\r\n\r\n    return (\r\n        <div className=\"postPage\">\r\n            { postData && \r\n                <div className=\"postMainContent\">\r\n                    <img src={postData.image} alt={postData.title} />\r\n                    <div className=\"postMainContent-text\">\r\n                        <h1>{postData.title}</h1>\r\n                        {postData.description && <p>{postData.description.slice(0,200)}...</p>}\r\n                        <a href={postData.url}>{postData.url}</a>\r\n                    </div>\r\n                </div> \r\n            }\r\n            <div className=\"comments\">\r\n                <p className=\"commentsTitle\">Post your comment</p>\r\n                <div>\r\n                    <TextField id=\"standard-input\" label=\"Enter your comment\" className=\"commentsInput\" onChange={handleCommentsChange} value={currentComment}/>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={handleAddingComments}>ADD</Button>\r\n                </div>\r\n                { comments && \r\n                    <div className=\"commentsData\">\r\n                        <p className=\"commentsData-title\">All comments</p>\r\n                        { comments.map((comment, index) => {\r\n                            return (\r\n                                <div key={index} className=\"singleComment\">\r\n                                    <p>{comment}</p>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div> \r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React,{ useState, useEffect } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport { connect } from \"react-redux\"\r\n\r\nimport { auth, createUserDocument, googleSignin } from \"../../FirebaseFunctions/firebaseUtils\"\r\n// import firebase from \"firebase/app\";\r\nimport { FcGoogle } from \"react-icons/fc\";\r\nimport Button from '@material-ui/core/Button';\r\nimport { BiHide } from \"react-icons/bi\"\r\n\r\n// import Main from \"../Main/Main\"\r\n\r\nimport \"./Nav.css\"\r\n\r\nconst Nav = (props) => {\r\n\r\n    const [userData, setUserData] = useState(\"\")\r\n    const [displayImage, setDisplayImage] = useState(\"\")\r\n    const [domainName, setDomainName] = useState(\"\")\r\n    const [display, setDisplay] = useState(false)\r\n\r\n    useEffect(() => {\r\n        auth.onAuthStateChanged(user => {\r\n            setUserData(user)\r\n            createUserDocument(user)\r\n            props.signingIn(user)\r\n            // if(user) {\r\n            //     console.log(27,user.providerData[0].photoUrl)\r\n            //     setDisplayImage(user.providerData[0].photoUrl)\r\n            // }\r\n            if(user) {\r\n                setDisplayImage(user.providerData[0].photoURL)\r\n            }\r\n            // console.log(28, user.displayName)\r\n        })\r\n        setDomainName(window.location.hostname)\r\n    },[])\r\n\r\n    const handleGoogleSignin = () => {\r\n        googleSignin()\r\n    }\r\n\r\n    const signOut = () => {\r\n        auth.signOut()\r\n    }\r\n\r\n    const displaySignOutButton = () => {\r\n        setDisplay(!display)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"navBar\">\r\n            <Link to=\"/\" className=\"Logo\"><h1>Ngage</h1></Link>\r\n            <div className=\"nav-menuItems\">\r\n                <Link to=\"/\" className=\"nav-home\">Home</Link>\r\n                <Link to=\"/myposts\" className=\"nav-myPosts\"><p>My posts</p></Link>\r\n                { userData ? \r\n                    <div className=\"nav-signIn\">\r\n                        <div className=\"signIn-userDetails\">\r\n                            <p><b>{userData.displayName}</b></p>\r\n                            <img src={displayImage} alt={userData.displayName} className=\"displayImage\" onClick={displaySignOutButton} title=\"Sign out\"/>\r\n                        </div>\r\n                        <div className={!display ? \"signOutBlock disappear\" : \"signOutBlock\"}>\r\n                            <p className=\"closeIcon\" title=\"Close\" onClick={displaySignOutButton}><BiHide /></p>\r\n                            <Button onClick={signOut} variant=\"contained\" className=\"signOutButton\">Sign out</Button>   \r\n                        </div>\r\n                        {/* <Button variant=\"contained\" color=\"primary\" className=\"googleSignOut\" onClick={signOut}>Sign out</Button> */}\r\n                    </div>\r\n                    : \r\n                    <Button variant=\"contained\" color=\"primary\" className=\"nav-googleButton\" onClick={handleGoogleSignin}><FcGoogle className=\"googleIconSignin\"/>Sign in</Button> \r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(63, state)\r\n    return state;\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        signingIn : auth => dispatch({ type: 'SIGNIN', payload: auth })\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Nav);","import React, { useState, useEffect } from \"react\"\r\nimport { firestore } from \"../../FirebaseFunctions/firebaseUtils\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\"\r\nimport { MdLink } from \"react-icons/md\"\r\n\r\nimport \"./MyPosts.css\"\r\n\r\nconst MyPosts = ({ allUserData }) => {\r\n\r\n    const [userData, setUserData] = useState([])\r\n    const [allPostIds, setAllPostIds] = useState([])\r\n    const [allPostDetails, setAllPostDetails] = useState([])\r\n\r\n    let data = []\r\n\r\n    useEffect(() => {\r\n        console.log(18, allUserData)\r\n    },[allUserData])\r\n\r\n    useEffect(() => {\r\n        if(allUserData && Object.keys(allUserData).length>0) {\r\n            setUserData(allUserData)\r\n        }\r\n    },[allUserData])\r\n\r\n    //Retrieving all the post id's of the user's\r\n    const retrievePostsIds = async () => {\r\n        let reference = await firestore.collection('userData').where(\"uid\",\"==\",allUserData.uid).get()\r\n        reference.forEach(item => {\r\n            setAllPostIds(item.data().userPosts)\r\n        })\r\n    }\r\n\r\n    //Calling the retrieval of post id's function\r\n    useEffect(() => {\r\n        if(allUserData && Object.keys(allUserData).length>0) {\r\n            retrievePostsIds()\r\n        }\r\n    },[allUserData])\r\n    \r\n\r\n    let loadPostData = async (id) => {\r\n        let reference = await firestore.collection('ngagePosts').where('postId',\"==\",id).get()\r\n        reference.forEach(item => {\r\n            data.push(item.data())\r\n            // setAllPostDetails(prevValue => {\r\n            //     return {\r\n            //         ...prevValue,\r\n            //         data : [...data , item.data()]\r\n            //     }\r\n            // })\r\n        })\r\n        setAllPostDetails(prevValue => {\r\n            return {\r\n                ...prevValue,\r\n                data\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(allPostIds.length>0) {\r\n            allPostIds.forEach(item => {\r\n                loadPostData(item.postId)\r\n            })\r\n            console.log(47, data.length)\r\n        }\r\n    },[allPostIds])\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"myPostsBlock\">\r\n            {allUserData ? \r\n                <>\r\n                    { (allPostDetails.data && allPostDetails.data.length>0) ? \r\n                        <>\r\n                            <p className=\"postTitle\">Your posts</p>\r\n                            { (allPostDetails.data) &&\r\n                                <div className=\"alLPosts\">\r\n                                    { allPostDetails.data.map((item, index) => {\r\n                                        return (\r\n                                            <div className=\"singlePost\" key={index}>\r\n                                                <Link to={\"/posts/\"+item.postId} target=\"_blank\">{item.title} <span className=\"linkIcon\"><MdLink /></span></Link>\r\n                                            </div>\r\n                                        )\r\n                                    })}\r\n                                </div> \r\n                            }\r\n                        </>\r\n                    :\r\n                        <p className=\"signIn-Alert-Message\">Looks like there are no posts! Go hereAdd some post bruh!</p>\r\n                    }\r\n                </>\r\n            \r\n            : \r\n                <p className=\"signIn-Alert-Message\">Please sign in to see our posts</p>}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        allUserData: state.userData\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,null)(MyPosts);","import { BrowserRouter, Route, Switch } from \"react-router-dom\"\nimport Main from \"./Components/Main/Main\"\nimport Post from \"./Components/Post/Post\"\nimport Nav from \"./Components/Nav/Nav\"\nimport MyPosts from \"./Components/MyPosts/MyPosts\"\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Nav />\n        <Switch>\n          <Route path=\"/\" component={Main} exact/>\n          <Route path=\"/posts/:postId\" component={Post} exact/>\n          <Route path=\"/myPosts\" component={MyPosts} exact/>\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initState = {\r\n    userData: {}\r\n}\r\n\r\nconst RootReducer = (state=initState, action) => {\r\n    if(action.type === \"SIGNIN\") {\r\n        return {\r\n            userData : action.payload\r\n        }\r\n    }\r\n    return state;\r\n}\r\n\r\nexport default RootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport RootReducer from \"../src/Reducers/RootReducer\"\n\nimport { Provider } from \"react-redux\"\n\nimport { createStore } from \"redux\"\n\nconst store = createStore(RootReducer)\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}