[{"F:\\projects\\React\\ngage\\src\\index.js":"1","F:\\projects\\React\\ngage\\src\\reportWebVitals.js":"2","F:\\projects\\React\\ngage\\src\\App.js":"3","F:\\projects\\React\\ngage\\src\\Components\\Main\\Main.js":"4","F:\\projects\\React\\ngage\\src\\Components\\Post\\Post.js":"5","F:\\projects\\React\\ngage\\src\\FirebaseFunctions\\firebaseUtils.js":"6","F:\\projects\\React\\ngage\\src\\Components\\Nav\\Nav.js":"7","F:\\projects\\React\\ngage\\src\\Components\\MyPosts\\MyPosts.js":"8","F:\\projects\\React\\ngage\\src\\Reducers\\RootReducer.js":"9"},{"size":719,"mtime":1609743653556,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":625,"mtime":1609734438680,"results":"13","hashOfConfig":"11"},{"size":5396,"mtime":1609913675309,"results":"14","hashOfConfig":"11"},{"size":3851,"mtime":1609751770756,"results":"15","hashOfConfig":"11"},{"size":2459,"mtime":1609578211498,"results":"16","hashOfConfig":"11"},{"size":3307,"mtime":1609916217562,"results":"17","hashOfConfig":"11"},{"size":3611,"mtime":1609914395999,"results":"18","hashOfConfig":"11"},{"size":258,"mtime":1609849240227,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"swvsub",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"F:\\projects\\React\\ngage\\src\\index.js",[],["40","41"],"F:\\projects\\React\\ngage\\src\\reportWebVitals.js",[],"F:\\projects\\React\\ngage\\src\\App.js",[],"F:\\projects\\React\\ngage\\src\\Components\\Main\\Main.js",["42"],"F:\\projects\\React\\ngage\\src\\Components\\Post\\Post.js",["43","44","45","46"],"import React, { useState, useEffect } from \"react\"\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { firestore } from \"../../FirebaseFunctions/firebaseUtils\";\r\nimport firebase from \"firebase/app\";\r\n\r\nimport \"./Post.css\"\r\n\r\n\r\nconst Post = (props) => {\r\n\r\n    const [routerPostId, setRouterPostId] = useState(\"\")\r\n    const [postData, setPostData] = useState({})\r\n    const [currentComment, setCurrentComment] = useState(\"\")\r\n    const [comments, setComments] = useState([])\r\n    const [retrievedComments, setRetrievedComments] = useState([])\r\n\r\n    useEffect(() => {\r\n        // console.log(props)\r\n        // console.log(10, props.match.params.postId)\r\n        // console.log(14, props.location.state)\r\n        setRouterPostId(props.match.params.postId)\r\n    },[props])\r\n\r\n    let loadPostData = async () => {\r\n        let reference = await firestore.collection('ngagePosts').where('postId',\"==\",props.match.params.postId).get()\r\n        reference.forEach(item => setPostData(item.data()))\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadPostData()\r\n    },[props])\r\n\r\n    const handleCommentsChange = e => {\r\n        let value = e.target.value\r\n        setCurrentComment(value)\r\n    }\r\n\r\n    const handleAddingComments = async () => {\r\n        setComments([...comments, currentComment])\r\n        setCurrentComment(\"\")\r\n        // let reference = await firestore.collection('ngagePosts').where('postId',\"==\", props.match.params.postId).get()\r\n        await firestore.doc(`/ngagePosts/${props.match.params.postId}`).update({\r\n            comments : firebase.firestore.FieldValue.arrayUnion(currentComment)\r\n        })\r\n    }\r\n\r\n    const handleRetrieveComments = async () => {\r\n        let reference = await firestore.collection('ngagePosts').where('postId',\"==\",props.match.params.postId).get()\r\n        reference.forEach(item => {\r\n            // if(item.data()){\r\n            //     console.log(50, item.data())\r\n            // } else {\r\n            //     console.log(\"no comments\")\r\n            // }\r\n            setRetrievedComments([...item.data().comments])\r\n            setComments([...item.data().comments])\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        handleRetrieveComments()\r\n    },[comments])\r\n\r\n    return (\r\n        <div className=\"postPage\">\r\n            { postData && \r\n                <div className=\"postMainContent\">\r\n                    <img src={postData.image} alt={postData.title} />\r\n                    <div className=\"postMainContent-text\">\r\n                        <h1>{postData.title}</h1>\r\n                        {postData.description && <p>{postData.description.slice(0,200)}...</p>}\r\n                        <a href={postData.url}>{postData.url}</a>\r\n                    </div>\r\n                </div> \r\n            }\r\n            <div className=\"comments\">\r\n                <p className=\"commentsTitle\">Post your comment</p>\r\n                <div>\r\n                    <TextField id=\"standard-input\" label=\"Enter your comment\" className=\"commentsInput\" onChange={handleCommentsChange} value={currentComment}/>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={handleAddingComments}>ADD</Button>\r\n                </div>\r\n                { comments && \r\n                    <div className=\"commentsData\">\r\n                        <p className=\"commentsData-title\">All comments</p>\r\n                        { comments.map((comment, index) => {\r\n                            return (\r\n                                <div key={index} className=\"singleComment\">\r\n                                    <p>{comment}</p>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div> \r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","F:\\projects\\React\\ngage\\src\\FirebaseFunctions\\firebaseUtils.js",[],"F:\\projects\\React\\ngage\\src\\Components\\Nav\\Nav.js",["47","48"],"F:\\projects\\React\\ngage\\src\\Components\\MyPosts\\MyPosts.js",["49","50","51"],"F:\\projects\\React\\ngage\\src\\Reducers\\RootReducer.js",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":24,"column":12,"nodeType":"58","messageId":"59","endLine":24,"endColumn":22},{"ruleId":"56","severity":1,"message":"60","line":12,"column":12,"nodeType":"58","messageId":"59","endLine":12,"endColumn":24},{"ruleId":"56","severity":1,"message":"61","line":16,"column":12,"nodeType":"58","messageId":"59","endLine":16,"endColumn":29},{"ruleId":"62","severity":1,"message":"63","line":32,"column":7,"nodeType":"64","endLine":32,"endColumn":14,"suggestions":"65"},{"ruleId":"62","severity":1,"message":"66","line":63,"column":7,"nodeType":"64","endLine":63,"endColumn":17,"suggestions":"67"},{"ruleId":"56","severity":1,"message":"68","line":20,"column":12,"nodeType":"58","messageId":"59","endLine":20,"endColumn":22},{"ruleId":"62","severity":1,"message":"69","line":38,"column":7,"nodeType":"64","endLine":38,"endColumn":9,"suggestions":"70"},{"ruleId":"56","severity":1,"message":"71","line":11,"column":12,"nodeType":"58","messageId":"59","endLine":11,"endColumn":20},{"ruleId":"62","severity":1,"message":"72","line":40,"column":7,"nodeType":"64","endLine":40,"endColumn":20,"suggestions":"73"},{"ruleId":"62","severity":1,"message":"74","line":69,"column":7,"nodeType":"64","endLine":69,"endColumn":19,"suggestions":"75"},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'pinnedData' is assigned a value but never used.","Identifier","unusedVar","'routerPostId' is assigned a value but never used.","'retrievedComments' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadPostData'. Either include it or remove the dependency array.","ArrayExpression",["78"],"React Hook useEffect has a missing dependency: 'handleRetrieveComments'. Either include it or remove the dependency array.",["79"],"'domainName' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["80"],"'userData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'retrievePostsIds'. Either include it or remove the dependency array.",["81"],"React Hook useEffect has missing dependencies: 'data.length' and 'loadPostData'. Either include them or remove the dependency array.",["82"],"no-global-assign","no-unsafe-negation",{"desc":"83","fix":"84"},{"desc":"85","fix":"86"},{"desc":"87","fix":"88"},{"desc":"89","fix":"90"},{"desc":"91","fix":"92"},"Update the dependencies array to be: [loadPostData, props]",{"range":"93","text":"94"},"Update the dependencies array to be: [comments, handleRetrieveComments]",{"range":"95","text":"96"},"Update the dependencies array to be: [props]",{"range":"97","text":"98"},"Update the dependencies array to be: [allUserData, retrievePostsIds]",{"range":"99","text":"100"},"Update the dependencies array to be: [allPostIds, data.length, loadPostData]",{"range":"101","text":"102"},[1115,1122],"[loadPostData, props]",[2260,2270],"[comments, handleRetrieveComments]",[1278,1280],"[props]",[1239,1252],"[allUserData, retrievePostsIds]",[2067,2079],"[allPostIds, data.length, loadPostData]"]